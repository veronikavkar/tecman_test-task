{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-c13a4ccc\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"table-container\"\n};\nconst _hoisted_2 = {\n  class: \"filters-container\"\n};\nconst _hoisted_3 = {\n  class: \"filters\"\n};\nconst _hoisted_4 = {\n  class: \"search\"\n};\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_FilterButton = _resolveComponent(\"FilterButton\");\n  const _component_SearchInput = _resolveComponent(\"SearchInput\");\n  const _component_CustomCheckbox = _resolveComponent(\"CustomCheckbox\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_FilterButton, {\n    label: \"КОЛОНКИ\",\n    icon: \"columns.svg\",\n    onClickAction: _ctx.openColumnFilter\n  }, null, 8 /* PROPS */, [\"onClickAction\"]), _createVNode(_component_FilterButton, {\n    label: \"ФИЛЬТРОВАТЬ\",\n    icon: \"filters.svg\",\n    filterCount: _ctx.activeFilters,\n    onClickAction: _ctx.openDataFilter\n  }, null, 8 /* PROPS */, [\"filterCount\", \"onClickAction\"])]), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_SearchInput)])]), _createElementVNode(\"table\", {\n    class: _normalizeClass($props.tableClass)\n  }, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [$props.selectable ? (_openBlock(), _createElementBlock(\"th\", _hoisted_5, [_createCommentVNode(\" Чекбокс для выбора всех строк \"), _createVNode(_component_CustomCheckbox, {\n    modelValue: $props.selectAllChecked,\n    indeterminate: $props.someSelected,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.$emit('select-all', $event))\n  }, null, 8 /* PROPS */, [\"modelValue\", \"indeterminate\"])])) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.columns, col => {\n    return _openBlock(), _createElementBlock(\"th\", {\n      key: col.key\n    }, _toDisplayString(col.label), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.rows, row => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: row[$props.rowKey],\n      class: \"checkbox-cell\"\n    }, [$props.selectable ? (_openBlock(), _createElementBlock(\"td\", _hoisted_6, [_createCommentVNode(\" Чекбокс для выбора конкретной строки \"), _createVNode(_component_CustomCheckbox, {\n      modelValue: row.selected,\n      \"onUpdate:modelValue\": $event => _ctx.$emit('select-row', row)\n    }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"])])) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.columns, col => {\n      return _openBlock(), _createElementBlock(\"td\", {\n        key: col.key,\n        onClick: $event => _ctx.$emit('cell-click', row, col.key),\n        class: _normalizeClass({\n          clickable: col.key === 'device'\n        })\n      }, _toDisplayString(row[col.key]), 11 /* TEXT, CLASS, PROPS */, _hoisted_7);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */))])], 2 /* CLASS */)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createVNode","_component_FilterButton","label","icon","onClickAction","_ctx","openColumnFilter","filterCount","activeFilters","openDataFilter","_hoisted_4","_component_SearchInput","_normalizeClass","$props","tableClass","selectable","_hoisted_5","_createCommentVNode","_component_CustomCheckbox","modelValue","selectAllChecked","indeterminate","someSelected","_cache","$event","$emit","_Fragment","_renderList","columns","col","rows","row","rowKey","_hoisted_6","selected","onClick","clickable","_hoisted_7"],"sources":["C:\\Users\\petro\\OneDrive\\Desktop\\tecman\\tecman_test-task\\src\\components\\common\\Table.vue"],"sourcesContent":["<template>\r\n  <div class=\"table-container\">\r\n    <div class=\"filters-container\">\r\n      <div class=\"filters\">\r\n        <FilterButton\r\n          label=\"КОЛОНКИ\"\r\n          icon=\"columns.svg\"\r\n          :onClickAction=\"openColumnFilter\"\r\n        />\r\n        <FilterButton\r\n          label=\"ФИЛЬТРОВАТЬ\"\r\n          icon=\"filters.svg\"\r\n          :filterCount=\"activeFilters\"\r\n          :onClickAction=\"openDataFilter\"\r\n        />\r\n      </div>\r\n      <div class=\"search\">\r\n        <SearchInput />\r\n      </div>\r\n    </div>\r\n    <table :class=\"tableClass\">\r\n      <thead>\r\n        <tr>\r\n          <th v-if=\"selectable\">\r\n            <!-- Чекбокс для выбора всех строк -->\r\n            <CustomCheckbox\r\n              :modelValue=\"selectAllChecked\"\r\n              :indeterminate=\"someSelected\"\r\n              @update:modelValue=\"$emit('select-all', $event)\"\r\n            />\r\n          </th>\r\n          <th v-for=\"col in columns\" :key=\"col.key\">{{ col.label }}</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"row in rows\" :key=\"row[rowKey]\" class=\"checkbox-cell\">\r\n          <td v-if=\"selectable\">\r\n            <!-- Чекбокс для выбора конкретной строки -->\r\n            <CustomCheckbox\r\n              :modelValue=\"row.selected\"\r\n              @update:modelValue=\"$emit('select-row', row)\"\r\n            />\r\n          </td>\r\n          <td\r\n            v-for=\"col in columns\"\r\n            :key=\"col.key\"\r\n            @click=\"$emit('cell-click', row, col.key)\"\r\n            :class=\"{ clickable: col.key === 'device' }\"\r\n          >\r\n            {{ row[col.key] }}\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CustomCheckbox from \"../common/CustomCheckbox.vue\";\r\nimport FilterButton from \"../common/FilterButton.vue\";\r\nimport SearchInput from \"../common/SearchInput.vue\";\r\n\r\nexport default {\r\n  name: \"Table\",\r\n\r\n  components: {\r\n    CustomCheckbox,\r\n    FilterButton,\r\n    SearchInput,\r\n  },\r\n  props: {\r\n    columns: {\r\n      type: Array,\r\n      required: true,\r\n    },\r\n    rows: {\r\n      type: Array,\r\n      required: true,\r\n    },\r\n    rowKey: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    selectable: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    tableClass: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    selectAllChecked: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    someSelected: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.filters-container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 16px;\r\n  flex-wrap: wrap;\r\n}\r\n.filters {\r\n  display: flex;\r\n  gap: 13px;\r\n}\r\n.table-container {\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0px 0px 7px 0px rgba(0, 0, 0, 0.1);\r\n  padding: 16px 17px;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\ntr {\r\n  height: 44px;\r\n}\r\nth {\r\n  font-weight: 500;\r\n}\r\nth,\r\ntd {\r\n  padding: 8px 12px;\r\n  text-align: left;\r\n  font-size: 14px;\r\n  vertical-align: middle;\r\n}\r\nth:first-child,\r\ntd:first-child {\r\n  padding-left: 0;\r\n  padding-right: 0;\r\n  width: 40px;\r\n  height: 32px;\r\n}\r\n.checkbox-cell {\r\n  text-align: center;\r\n  vertical-align: middle;\r\n  padding: 0;\r\n}\r\n\r\n@media screen and (max-width: 700px) {\r\n  .filters {\r\n    margin-right: 30px;\r\n    margin-bottom: 20px;\r\n  }\r\n}\r\n@media screen and (max-width: 590px) {\r\n  .table-container {\r\n    padding: 16px 10px;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC;AAAmB;;EACvBA,KAAK,EAAC;AAAS;;EAafA,KAAK,EAAC;AAAQ;;EAhBzBC,GAAA;AAAA;;EAAAA,GAAA;AAAA;mBAAA;;;;;uBACEC,mBAAA,CAqDM,OArDNC,UAqDM,GApDJC,mBAAA,CAiBM,OAjBNC,UAiBM,GAhBJD,mBAAA,CAYM,OAZNE,UAYM,GAXJC,YAAA,CAIEC,uBAAA;IAHAC,KAAK,EAAC,SAAS;IACfC,IAAI,EAAC,aAAa;IACjBC,aAAa,EAAEC,IAAA,CAAAC;8CAElBN,YAAA,CAKEC,uBAAA;IAJAC,KAAK,EAAC,aAAa;IACnBC,IAAI,EAAC,aAAa;IACjBI,WAAW,EAAEF,IAAA,CAAAG,aAAa;IAC1BJ,aAAa,EAAEC,IAAA,CAAAI;+DAGpBZ,mBAAA,CAEM,OAFNa,UAEM,GADJV,YAAA,CAAeW,sBAAA,E,KAGnBd,mBAAA,CAiCQ;IAjCAJ,KAAK,EApBjBmB,eAAA,CAoBmBC,MAAA,CAAAC,UAAU;MACvBjB,mBAAA,CAYQ,gBAXNA,mBAAA,CAUK,aATOgB,MAAA,CAAAE,UAAU,I,cAApBpB,mBAAA,CAOK,MA9BfqB,UAAA,GAwBYC,mBAAA,mCAAsC,EACtCjB,YAAA,CAIEkB,yBAAA;IAHCC,UAAU,EAAEN,MAAA,CAAAO,gBAAgB;IAC5BC,aAAa,EAAER,MAAA,CAAAS,YAAY;IAC3B,qBAAiB,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEnB,IAAA,CAAAoB,KAAK,eAAeD,MAAM;gEA5B5DP,mBAAA,iB,kBA+BUtB,mBAAA,CAA8D+B,SAAA,QA/BxEC,WAAA,CA+B4Bd,MAAA,CAAAe,OAAO,EAAdC,GAAG;yBAAdlC,mBAAA,CAA8D;MAAlCD,GAAG,EAAEmC,GAAG,CAACnC;wBAAQmC,GAAG,CAAC3B,KAAK;sCAG1DL,mBAAA,CAkBQ,iB,kBAjBNF,mBAAA,CAgBK+B,SAAA,QAnDbC,WAAA,CAmC0Bd,MAAA,CAAAiB,IAAI,EAAXC,GAAG;yBAAdpC,mBAAA,CAgBK;MAhBoBD,GAAG,EAAEqC,GAAG,CAAClB,MAAA,CAAAmB,MAAM;MAAGvC,KAAK,EAAC;QACrCoB,MAAA,CAAAE,UAAU,I,cAApBpB,mBAAA,CAMK,MA1CfsC,UAAA,GAqCYhB,mBAAA,0CAA6C,EAC7CjB,YAAA,CAGEkB,yBAAA;MAFCC,UAAU,EAAEY,GAAG,CAACG,QAAQ;MACxB,qBAAiB,EAAAV,MAAA,IAAEnB,IAAA,CAAAoB,KAAK,eAAeM,GAAG;wEAxCzDd,mBAAA,iB,kBA2CUtB,mBAAA,CAOK+B,SAAA,QAlDfC,WAAA,CA4C0Bd,MAAA,CAAAe,OAAO,EAAdC,GAAG;2BADZlC,mBAAA,CAOK;QALFD,GAAG,EAAEmC,GAAG,CAACnC,GAAG;QACZyC,OAAK,EAAAX,MAAA,IAAEnB,IAAA,CAAAoB,KAAK,eAAeM,GAAG,EAAEF,GAAG,CAACnC,GAAG;QACvCD,KAAK,EA/ClBmB,eAAA;UAAAwB,SAAA,EA+CiCP,GAAG,CAACnC,GAAG;QAAA;0BAEzBqC,GAAG,CAACF,GAAG,CAACnC,GAAG,iCAjD1B2C,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}